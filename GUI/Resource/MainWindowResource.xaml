<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
            <!-- Application-wide styles -->
            <Style TargetType="Button" x:Key="NavButton">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                                <Border Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                                CornerRadius="8"
                                Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F3F4F6"/>
                        <Setter Property="Opacity" Value="0.9"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Course Card Style -->
            <Style x:Key="CourseCardStyle" TargetType="Border">
                <Setter Property="Width" Value="280"/>
                <Setter Property="Margin" Value="12"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="CornerRadius" Value="12"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#E5E7EB"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="#1F2937" Direction="270" BlurRadius="10" ShadowDepth="2" Opacity="0.05"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Text Styles -->
            <Style x:Key="HeadingStyle" TargetType="TextBlock">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Foreground" Value="#111827"/>
                <Setter Property="Margin" Value="0,0,0,8"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>

            <Style x:Key="SubheadingStyle" TargetType="TextBlock">
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="#374151"/>
                <Setter Property="Margin" Value="0,0,0,4"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>

            <Style x:Key="BodyTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="#4B5563"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="LineHeight" Value="20"/>
            </Style>

            <!-- Common animations -->
            <Storyboard x:Key="FadeInStoryboard">
                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.4"/>
            </Storyboard>

            <Storyboard x:Key="ScaleInStoryboard">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0.95" To="1" Duration="0:0:0.3"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0.95" To="1" Duration="0:0:0.3"/>
            </Storyboard>

            <!-- Custom colors -->
            <SolidColorBrush x:Key="PrimaryColor" Color="#3B82F6"/>
            <SolidColorBrush x:Key="PrimaryHoverColor" Color="#2563EB"/>
            <SolidColorBrush x:Key="SecondaryColor" Color="#6366F1"/>
            <SolidColorBrush x:Key="AccentColor" Color="#10B981"/>
            <SolidColorBrush x:Key="WarningColor" Color="#F59E0B"/>
            <SolidColorBrush x:Key="ErrorColor" Color="#EF4444"/>
            <SolidColorBrush x:Key="TextPrimaryColor" Color="#111827"/>
            <SolidColorBrush x:Key="TextSecondaryColor" Color="#4B5563"/>
            <SolidColorBrush x:Key="TextTertiaryColor" Color="#9CA3AF"/>
            <SolidColorBrush x:Key="BackgroundColor" Color="#F9FAFB"/>
            <SolidColorBrush x:Key="BackgroundAltColor" Color="#F3F4F6"/>
            <SolidColorBrush x:Key="BorderColor" Color="#E5E7EB"/>
    <Style x:Key="PopupStyle" TargetType="Popup">
        
        <Setter Property="Placement" Value="Bottom"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="PopupAnimation" Value="Slide"/>
    </Style>

   
    
    <!-- Style cho TextBlock -->
    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="#2C3E50"/>
    </Style>
    <!-- Style cho các ListBoxItem -->
    <Style TargetType="ListBoxItem">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <!-- Hover Effect -->
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="#F2F2F2"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="#3498DB"/>
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
        
    </Style>
    <DataTemplate x:Key="CourseTemplate">
        <Border BorderBrush="Gray" BorderThickness="1" Margin="10" Padding="10" CornerRadius="10">
            <StackPanel>
                <Image Source="{Binding ImagePath}" Width="150" Height="150" Stretch="UniformToFill" Margin="0,0,0,10"/>
                <TextBlock Text="{Binding CourseName}" FontWeight="Bold" FontSize="16" HorizontalAlignment="Center" />
                <TextBlock Text="{Binding Price}" FontSize="14" HorizontalAlignment="Center" Foreground="Green" />
                <TextBlock Text="{Binding Description}" FontSize="12" HorizontalAlignment="Center" Margin="0,10,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
</ResourceDictionary>
  
